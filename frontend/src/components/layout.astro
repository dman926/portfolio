---
import Nav from "./nav.astro";
import SideBar, { type Props as SideBarProps } from "./side-bar.astro";
import "../app.pcss";

interface Props {
  title?: string;
  sidebar?: SideBarProps;
}

const defaultTitle = "Stelmach";
const title = Astro.props.title
  ? `${Astro.props.title} | ${defaultTitle}`
  : defaultTitle;
const { sidebar } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <section class="flex flex-col min-h-lvh">
      <header class="flex-none">
        <Nav />
      </header>
      <div class="flex-auto">
        <slot name="before-content" />
        <div class="p-4 lg:flex">
          {
            sidebar && (
              <div class="flex-none paper lg:w-72">
                <SideBar {...sidebar} />
              </div>
            )
          }
          <main class="flex-auto p-2">
            <slot />
          </main>
        </div>
      </div>
    </section>

    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          // if user already set a theme
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          // if user prefers dark mode
          return "dark";
        }
        // default
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      window.localStorage.setItem("theme", theme);
    </script>

    <style>
      html,
      body {
        height: 100%;
        margin: 0;
      }
    </style>
  </body>
</html>
